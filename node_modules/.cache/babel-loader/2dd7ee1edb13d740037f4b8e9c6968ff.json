{"remainingRequest":"/home/weslley-costa/Documentos/SolinftebrokerReal/solinfbroker/okta-app/node_modules/babel-loader/lib/index.js!/home/weslley-costa/Documentos/SolinftebrokerReal/solinfbroker/okta-app/node_modules/eslint-loader/index.js??ref--14-0!/home/weslley-costa/Documentos/SolinftebrokerReal/solinfbroker/okta-app/src/config/Link.js","dependencies":[{"path":"/home/weslley-costa/Documentos/SolinftebrokerReal/solinfbroker/okta-app/src/config/Link.js","mtime":1645190818146},{"path":"/home/weslley-costa/Documentos/SolinftebrokerReal/solinfbroker/okta-app/babel.config.js","mtime":1644522504108},{"path":"/home/weslley-costa/Documentos/SolinftebrokerReal/solinfbroker/okta-app/node_modules/cache-loader/dist/cjs.js","mtime":1645047052504},{"path":"/home/weslley-costa/Documentos/SolinftebrokerReal/solinfbroker/okta-app/node_modules/babel-loader/lib/index.js","mtime":1645047053036},{"path":"/home/weslley-costa/Documentos/SolinftebrokerReal/solinfbroker/okta-app/node_modules/eslint-loader/index.js","mtime":1645047052588}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CnZhciBhcGkgPSBheGlvcy5jcmVhdGUoewogIGJhc2VVUkw6ICJodHRwOi8vbG9jYWxob3N0OjgwODMvIgp9KTsKYXBpLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgY29uZmlnLmhlYWRlcnMuQXV0aG9yaXphdGlvbiA9ICJCZWFyZXIgIi5jb25jYXQodG9rZW4pOwogIHJldHVybiBjb25maWc7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOwpleHBvcnQgZGVmYXVsdCBhcGk7"},{"version":3,"sources":["/home/weslley-costa/Documentos/SolinftebrokerReal/solinfbroker/okta-app/src/config/Link.js"],"names":["axios","api","create","baseURL","interceptors","request","use","config","headers","Authorization","token","error","Promise","reject"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAE;AADc,CAAb,CAAZ;AAIAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CACE,UAACC,MAAD,EAAY;AACVA,EAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,oBAAyCC,KAAzC;AAEA,SAAOH,MAAP;AACD,CALH,EAME,UAACI,KAAD,EAAW;AACT,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CARH;AAWA,eAAeV,GAAf","sourcesContent":["import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:8083/\",\n});\n\napi.interceptors.request.use(\n  (config) => {\n    config.headers.Authorization = `Bearer ${token}`;\n\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n"]}]}