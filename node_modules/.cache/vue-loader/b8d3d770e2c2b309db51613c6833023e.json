{"remainingRequest":"/home/weslley-costa/Documentos/SolinftebrokerReal/solinfbroker/okta-app/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/weslley-costa/Documentos/SolinftebrokerReal/solinfbroker/okta-app/src/components/Home.vue?vue&type=style&index=0&id=8dc7cce2&lang=css","dependencies":[{"path":"/home/weslley-costa/Documentos/SolinftebrokerReal/solinfbroker/okta-app/src/components/Home.vue","mtime":1647284030584},{"path":"/home/weslley-costa/Documentos/SolinftebrokerReal/solinfbroker/okta-app/node_modules/css-loader/dist/cjs.js","mtime":1645047052856},{"path":"/home/weslley-costa/Documentos/SolinftebrokerReal/solinfbroker/okta-app/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1645047053344},{"path":"/home/weslley-costa/Documentos/SolinftebrokerReal/solinfbroker/okta-app/node_modules/postcss-loader/src/index.js","mtime":1645047053020},{"path":"/home/weslley-costa/Documentos/SolinftebrokerReal/solinfbroker/okta-app/node_modules/cache-loader/dist/cjs.js","mtime":1645047052504},{"path":"/home/weslley-costa/Documentos/SolinftebrokerReal/solinfbroker/okta-app/node_modules/vue-loader-v16/dist/index.js","mtime":1645047053008}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiNIb21lIHsKICBwYWRkaW5nOiA0MHB4IDUwcHggMTUwcHggMjIwcHg7CiAgd2lkdGg6IDUwJTsKICBib3gtc2l6aW5nOiBib3JkZXItYm94Owp9Cg=="},{"version":3,"sources":["/home/weslley-costa/Documentos/SolinftebrokerReal/solinfbroker/okta-app/src/components/Home.vue"],"names":[],"mappings":";AA0WA,CAAC,CAAC,CAAC,CAAC,EAAE;EACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB","file":"/home/weslley-costa/Documentos/SolinftebrokerReal/solinfbroker/okta-app/src/components/Home.vue","sourceRoot":"","sourcesContent":["<!-- component -->\n<template>\n  <div\n    id=\"Home\"\n    class=\"flex container justify-center xl:mx-auto md:container sm:inset-x-10\"\n  >\n    <table\n      class=\"text-center justify-center min-w-full divide-y shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\"\n    >\n      <thead class=\"bg-gray-300 flex w-full\">\n        <tr class=\"flex w-full text-center\">\n          <th\n            class=\"p-4 w-1/4 font-medium text-gray-900 uppercase tracking-wider\"\n          >\n            Name\n          </th>\n          <th\n            class=\"p-4 w-1/4 text-blue-500 font-medium uppercase tracking-wider\"\n          >\n            Symbol\n          </th>\n          <th\n            class=\"p-4 w-1/4 text-red-500 font-medium uppercase tracking-wider\"\n          >\n            Min\n          </th>\n          <th\n            class=\"p-4 w-1/4 text-green-500 font-medium uppercase tracking-wider\"\n          >\n            Max\n          </th>\n        </tr>\n      </thead>\n      <!-- Remove the nasty inline CSS fixed height on production and replace it with a CSS class — this is just for demonstration purposes! -->\n\n      <tbody\n        class=\"bg-gray-100 divide-y flex flex-col items-center overflow-y-scroll w-full\"\n        style=\"height: 50vh\"\n      >\n        <tr class=\"flex w-full text-center\" v-for=\"(acao, i) in acoes\" :key=\"i\">\n          <td class=\"p-4 w-1/4 whitespace-nowrap\">\n            <button v-on:click=\"toggleModal(acao)\" v-bind=\"stockSelecionado\">\n              <span\n                class=\"bg-gray-100 text-gray-500 text-sm font-medium mr-2 px-2.5 py-0.5 hover:bg-yellow-300 hover:text-black\"\n                >{{ acao.stockName }}</span\n              >\n            </button>\n          </td>\n          <td class=\"p-4 w-1/4 text-blue-500\">\n            <span\n              class=\"bg-gray-100 text-gray-500 text-sm font-medium mr-2 px-2.5 py-0.5\"\n              >{{ acao.stockSymbol }}</span\n            >\n          </td>\n          <td class=\"p-4 w-1/4 text-red-400\">{{ acao.askMin }}</td>\n          <td class=\"p-4 w-1/4 text-green-400\">{{ acao.askMax }}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- modal -->\n    <div class=\"w-1/12\">\n      <div\n        v-if=\"showModal\"\n        class=\"overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none justify-center items-center flex\"\n      >\n        <div class=\"relative w-auto my-6 mx-auto max-w-6xl\">\n          <!--content-->\n          <div\n            class=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\"\n          >\n            <!--header-->\n            <div\n              class=\"flex items-start justify-center p-1 border-b border-solid border-blueGray-200 rounded-t\"\n            >\n              <h5 class=\"text-3xl font-semibold\">CREATE ORDEM</h5>\n            </div>\n            <!--body-->\n            <form class=\"w-full max-w-lg p-3\">\n              <div class=\"w-full md:min-w-full mb-6 md:mb-0 pb-3\">\n                <div class=\"col-span-6\">\n                  <label\n                    class=\"justify-center block text-sm font-medium text-gray-700\"\n                    >Ação\n                  </label>\n\n                  {{ stockName }}\n                </div>\n              </div>\n\n              <div class=\"flex justify-evenly -mx-3 mb-2\">\n                <div class=\"w-1/2 md:w-1/3 px-3 mb-6 md:mb-0\">\n                  <label\n                    class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n                    for=\"grid-state\"\n                  >\n                    Tipo\n                  </label>\n                  <div class=\"relative\">\n                    <select\n                      v-model=\"type\"\n                      class=\"block appearance-none bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                    >\n                      <option value=\"2\">Venda</option>\n                      <option value=\"1\">Compra</option>\n                    </select>\n                    <div\n                      class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\"\n                    ></div>\n                  </div>\n                </div>\n\n                <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\n                  <label\n                    class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n                    for=\"grid-city\"\n                  >\n                    Quantidade\n                  </label>\n                  <input\n                    v-model=\"volume\"\n                    class=\"appearance-none block w-10/12 bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\n                  <label\n                    class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n                    for=\"grid-zip\"\n                  >\n                    Preço\n                  </label>\n                  <input\n                    v-model=\"price\"\n                    class=\"appearance-none block w-10/12 bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </form>\n            <!--footer-->\n            <div\n              class=\"flex items-center justify-between p-3 border-t border-solid border-blueGray-200 rounded-b\"\n            >\n              <button\n                class=\"py-3 px-8 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-500 hover:bg-gray-300 focus:outline-none\"\n                @click=\"comprar()\"\n              >\n                Salvar Ordem\n              </button>\n              <button\n                class=\"py-3 px-8 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-red-500 hover:bg-gray-300 focus:outline-none\"\n                type=\"button\"\n                v-on:click=\"toggleModal1()\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        v-if=\"showModal\"\n        class=\"opacity-25 fixed inset-0 z-40 bg-black\"\n      ></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"Testes\",\n  data: () => ({\n    acoes: [],\n    comprar: [],\n    showModal: false,\n    stockName: \"\",\n    stockSymbol: \"\",\n    idStock: null,\n    compraAcao: null,\n    stockSelecionado: [],\n    name: \"\",\n    user: [],\n    type: null,\n  }),\n  created() {\n    this.buscar();\n  },\n  before() {\n    this.stockBalance();\n    this.comprar();\n  },\n  methods: {\n    async buscar() {\n      if (this.$root.authenticated) {\n        this.claims = await this.$auth.getUser();\n        let accessToken = this.$auth.getAccessToken();\n        console.log(`Authorization: Bearer ${accessToken}`);\n        try {\n          let response = await axios.get(`http://localhost:8084/stock`, {\n            headers: { Authorization: \"Bearer \" + accessToken },\n          });\n          //this.caffeineLevel = response.data;\n          console.log(response);\n\n          for (var chave in response.data) {\n            this.acoes.push({\n              id: response.data[chave].id,\n              stockSymbol: response.data[chave].stockSymbol,\n              stockName: response.data[chave].stockName,\n              askMin:\n                response.data[chave].ask_min == null\n                  ? 0\n                  : response.data[chave].ask_min.toLocaleString(\"pt-BR\", {\n                      minimumFractionDigits: 2,\n                    }),\n              askMax:\n                response.data[chave].ask_min == null\n                  ? 0\n                  : response.data[chave].ask_min.toLocaleString(\"pt-BR\", {\n                      minimumFractionDigits: 2,\n                    }),\n            });\n          }\n        } catch (error) {\n          console.log(\"Ta errado isso aí\");\n          this.caffeineLevel = `${error}`;\n        }\n      }\n    },\n    async selectStock() {\n      if (this.$root.authenticated) {\n        this.claims = await this.$auth.getUser();\n        let accessToken = this.$auth.getAccessToken();\n        try {\n          let response = await axios.get(\n            `http://localhost:8084/stock/stockname/${this.name}`,\n\n            {\n              headers: { Authorization: \"Bearer \" + accessToken },\n            }\n          );\n          this.stockSelecionado = response.data;\n          console.log(\"olha pra baixo\");\n          console.log(this.stockSelecionado);\n        } catch (error) {\n          this.stockSelecionado = `${error}`;\n        }\n      }\n    },\n    async toggleModal1() {\n      this.showModal = !this.showModal;\n    },\n    async toggleModal(acao) {\n      this.showModal = !this.showModal;\n      this.compraAcao = acao;\n      this.stockName = acao.stockName;\n      this.stockSymbol = acao.stockSymbol;\n      this.idStock = acao.id;\n    },\n  },\n\n  async getUser() {\n    console.log(\"Quase pegando usuario\");\n    if (this.$root.authenticated) {\n      this.claims = await this.$auth.getUser();\n      let accessToken = this.$auth.getAccessToken();\n      try {\n        await axios\n          .get(`http://localhost:8083/user/${this.claims.email}`, {\n            headers: {\n              Authorization: \"Bearer \" + accessToken,\n            },\n          })\n          .then((res) => {\n            this.user = res.data;\n          });\n\n        console.log(this.user);\n\n        await console.log(\"o id do usuario é: \" + this.user);\n      } catch (error) {\n        this.user = `${error}`;\n      }\n    }\n  },\n  async stockBalance() {\n    console.log(\"to aquiiiiiiiiii\");\n    if (this.$root.authenticated) {\n      this.claims = await this.$auth.getUser();\n      let accessToken = this.$auth.getAccessToken();\n      try {\n        let response = await axios.get(`http://localhost:8083/balances`, {\n          headers: { Authorization: \"Bearer \" + accessToken },\n        });\n        console.log(response.data);\n        let balance = response.data;\n        console.log(this.balance);\n        for (let key in balance) {\n          if (balance[key].idUser.username === this.claims.email) {\n            console.log(\"É igual abestadooo\");\n            return (this.user.push = {\n              username: balance[key].idUser.username,\n              id: balance[key].idUser.id,\n              idStock: balance[key].idStock,\n              stockName: balance[key].stockName,\n              stockSymbol: balance[key].stockSymbol,\n              volume: balance[key].volume,\n            });\n          }\n        }\n      } catch (error) {\n        this.walletUser = `${error}`;\n      }\n    }\n  },\n\n  /* ------------------- */\n  async comprar() {\n    if (this.$root.authenticated) {\n      this.claims = await this.$auth.getUser();\n      let accessToken = this.$auth.getAccessToken();\n      try {\n        await axios\n          .post(\n            `http://localhost:8083/order/compra`,\n            {\n              headers: { Authorization: \"Bearer \" + accessToken },\n            },\n            {\n              idUser: {\n                id: this.user.id,\n              },\n              idStock: this.idStock,\n              stockSymbol: this.stockSymbol,\n              stockName: this.stockName,\n              volume: this.volume,\n              price: this.price,\n              type: this.type,\n              volumeRemaining: 0,\n              status: 1,\n            }\n          )\n          .then(() => {\n            window.alert(\"Cadastrado com sucesso\");\n            console.log(\"criou\");\n            this.sucesso = true;\n            this.name = \"---- Selecione uma stock ----\";\n            this.price = \"\";\n            this.volume = \"\";\n            this.type = \"---- Selecione o tipo ----\";\n          });\n        console.log(\"esse é o id do stock: \" + this.user.id);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  },\n};\n</script>\n<style>\n#Home {\n  padding: 40px 50px 150px 220px;\n  width: 50%;\n  box-sizing: border-box;\n}\n</style>\n"]}]}