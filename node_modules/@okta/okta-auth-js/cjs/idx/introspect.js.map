{"version":3,"sources":["../../../lib/idx/introspect.ts"],"names":["introspect","authClient","options","rawIdxResponse","transactionManager","loadIdxResponse","version","IDX_API_VERSION","domain","idx","makeIdxState"],"mappings":";;;;;;AAYA;;AAGA;;AACA;;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAaO,eAAeA,UAAf,CAA2BC,UAA3B,EAAiDC,OAAjD,EAAmG;AACxG,MAAIC,cAAJ,CADwG,CAGxG;;AACAA,EAAAA,cAAc,GAAGF,UAAU,CAACG,kBAAX,CAA8BC,eAA9B,EAAjB,CAJwG,CAMxG;;AACA,MAAI,CAACF,cAAL,EAAqB;AACnB,UAAMG,OAAO,GAAGC,0BAAhB;AACA,UAAMC,MAAM,GAAG,0BAAeP,UAAf,CAAf;AACAE,IAAAA,cAAc,GAAG,MAAMM,mBAAIT,UAAJ,CAAe;AAAEQ,MAAAA,MAAF;AAAUF,MAAAA,OAAV;AAAmB,SAAGJ;AAAtB,KAAf,CAAvB;AACD;;AAED,SAAOO,mBAAIC,YAAJ,CAAiBP,cAAjB,CAAP;AACD","sourcesContent":["/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport idx from '@okta/okta-idx-js';\nimport { OktaAuth } from '../types';\nimport { IdxResponse, RawIdxResponse } from './types/idx-js';\nimport { getOAuthDomain } from '../oidc';\nimport { IDX_API_VERSION } from '../constants';\n\nexport interface IntrospectOptions {\n  interactionHandle: string;\n  stateHandle?: string;\n}\n\nexport async function introspect (authClient: OktaAuth, options: IntrospectOptions): Promise<IdxResponse> {\n  let rawIdxResponse: RawIdxResponse;\n  \n  // try load from storage first\n  rawIdxResponse = authClient.transactionManager.loadIdxResponse();\n  \n  // call idx.introspect if no existing idx response available in storage\n  if (!rawIdxResponse) {\n    const version = IDX_API_VERSION;\n    const domain = getOAuthDomain(authClient);\n    rawIdxResponse = await idx.introspect({ domain, version, ...options });\n  }\n\n  return idx.makeIdxState(rawIdxResponse);\n}\n"],"file":"introspect.js"}