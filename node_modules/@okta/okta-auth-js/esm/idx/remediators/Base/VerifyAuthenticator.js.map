{"version":3,"sources":["../../../../../lib/idx/remediators/Base/VerifyAuthenticator.ts"],"names":["Remediator","VerifyAuthenticator","canRemediate","challengeType","getRelatesToType","values","verificationCode","includes","password","mapCredentials","passcode","getInputCredentials","input","name","form","value","type","required"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAASA,UAAT,QAA8C,cAA9C;AAOA;AACA,OAAO,MAAMC,mBAAN,SAAkCD,UAAlC,CAA6C;AAAA;AAAA;;AAAA,iCAK5C;AACJ,qBAAe;AADX,KAL4C;AAAA;;AASlDE,EAAAA,YAAY,GAAG;AACb,QAAMC,aAAa,GAAG,KAAKC,gBAAL,EAAtB;;AACA,QAAI,KAAKC,MAAL,CAAYC,gBAAZ,IACG,CAAC,OAAD,EAAU,OAAV,EAAmBC,QAAnB,CAA4BJ,aAA5B,CADP,EACmD;AACjD,aAAO,IAAP;AACD;;AACD,QAAI,KAAKE,MAAL,CAAYG,QAAZ,IAAwBL,aAAa,KAAK,UAA9C,EAA0D;AACxD,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD;;AAEDM,EAAAA,cAAc,GAAG;AACf,WAAO;AACLC,MAAAA,QAAQ,EAAE,KAAKL,MAAL,CAAYC,gBAAZ,IAAgC,KAAKD,MAAL,CAAYG;AADjD,KAAP;AAGD;;AAEDG,EAAAA,mBAAmB,CAACC,KAAD,EAAQ;AACzB,QAAMT,aAAa,GAAG,KAAKC,gBAAL,EAAtB;AACA,QAAMS,IAAI,GAAGV,aAAa,KAAK,UAAlB,GAA+B,UAA/B,GAA4C,kBAAzD;AACA,2CACKS,KAAK,CAACE,IAAN,CAAWC,KAAX,CAAiB,CAAjB,CADL;AAEEF,MAAAA,IAFF;AAGEG,MAAAA,IAAI,EAAE,QAHR;AAIEC,MAAAA,QAAQ,EAAEL,KAAK,CAACK;AAJlB;AAMD;;AApCiD;;gBAAvChB,mB,qBACc,yB","sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\n\nexport interface VerifyAuthenticatorValues extends RemediationValues {\n  verificationCode?: string;\n  password?: string;\n}\n\n// Base class - DO NOT expose static remediationName\nexport class VerifyAuthenticator extends Remediator {\n  static remediationName = 'challenge-authenticator';\n\n  values: VerifyAuthenticatorValues;\n\n  map = {\n    'credentials': []\n  };\n\n  canRemediate() {\n    const challengeType = this.getRelatesToType();\n    if (this.values.verificationCode \n        && ['email', 'phone'].includes(challengeType)) {\n      return true;\n    }\n    if (this.values.password && challengeType === 'password') {\n      return true;\n    }\n    return false;\n  }\n\n  mapCredentials() {\n    return { \n      passcode: this.values.verificationCode || this.values.password\n    };\n  }\n\n  getInputCredentials(input) {\n    const challengeType = this.getRelatesToType();\n    const name = challengeType === 'password' ? 'password' : 'verificationCode';\n    return {\n      ...input.form.value[0],\n      name,\n      type: 'string',\n      required: input.required\n    };\n  }\n\n}\n"],"file":"VerifyAuthenticator.js"}