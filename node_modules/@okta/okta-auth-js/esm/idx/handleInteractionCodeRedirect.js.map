{"version":3,"sources":["../../../lib/idx/handleInteractionCodeRedirect.ts"],"names":["AuthSdkError","OAuthError","handleInteractionCodeRedirect","authClient","url","meta","transactionManager","load","codeVerifier","state","savedState","searchParams","URL","get","interactionCode","error","tokens","token","exchangeCodeForTokens","tokenManager","setTokens"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,WAAzC;AAIA,gBAAsBC,6BAAtB;AAAA;AAAA;;;qDAAO,WACLC,UADK,EAELC,GAFK,EAGU;AACf,QAAMC,IAAI,GAAGF,UAAU,CAACG,kBAAX,CAA8BC,IAA9B,EAAb;;AACA,QAAI,CAACF,IAAL,EAAW;AACT,YAAM,IAAIL,YAAJ,CAAiB,0CAAjB,CAAN;AACD;;AAED,QAAM;AACJQ,MAAAA,YADI;AAEJC,MAAAA,KAAK,EAAEC;AAFH,QAGFL,IAHJ;AAIA,QAAM;AACJM,MAAAA,YADI,CAEN;AACA;;AAHM,QAIF,IAAIC,GAAJ,CAAQR,GAAR,CAJJ;AAKA,QAAMK,KAAK,GAAGE,YAAY,CAACE,GAAb,CAAiB,OAAjB,CAAd;AACA,QAAMC,eAAe,GAAGH,YAAY,CAACE,GAAb,CAAiB,kBAAjB,CAAxB,CAhBe,CAkBf;;AACA,QAAME,KAAK,GAAGJ,YAAY,CAACE,GAAb,CAAiB,OAAjB,CAAd;;AACA,QAAIE,KAAJ,EAAW;AACT,YAAM,IAAId,UAAJ,CAAec,KAAf,EAAsBJ,YAAY,CAACE,GAAb,CAAiB,mBAAjB,CAAtB,CAAN;AACD;;AACD,QAAIJ,KAAK,KAAKC,UAAd,EAA0B;AACxB,YAAM,IAAIV,YAAJ,CAAiB,6DAAjB,CAAN;AACD;;AACD,QAAI,CAACc,eAAL,EAAsB;AACpB,YAAM,IAAId,YAAJ,CAAiB,+CAAjB,CAAN;AACD,KA5Bc,CA8Bf;;;AACA,QAAM;AAAEgB,MAAAA;AAAF,cAAmBb,UAAU,CAACc,KAAX,CAAiBC,qBAAjB,CAAuC;AAAEJ,MAAAA,eAAF;AAAmBN,MAAAA;AAAnB,KAAvC,CAAzB;AACAL,IAAAA,UAAU,CAACgB,YAAX,CAAwBC,SAAxB,CAAkCJ,MAAlC;AACD,G","sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError, OAuthError } from '../errors';\nimport { OktaAuth } from '..';\nimport {IdxTransactionMeta} from '../types';\n\nexport async function handleInteractionCodeRedirect(\n  authClient: OktaAuth, \n  url: string\n): Promise<void> {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  if (!meta) {\n    throw new AuthSdkError('No transaction data was found in storage');\n  }\n\n  const { \n    codeVerifier,\n    state: savedState \n  } = meta;\n  const { \n    searchParams\n  // URL API has been added to the polyfill\n  // eslint-disable-next-line compat/compat\n  } = new URL(url); \n  const state = searchParams.get('state');\n  const interactionCode = searchParams.get('interaction_code');\n\n  // Error handling\n  const error = searchParams.get('error');\n  if (error) {\n    throw new OAuthError(error, searchParams.get('error_description'));\n  }\n  if (state !== savedState) {\n    throw new AuthSdkError('State in redirect uri does not match with transaction state');\n  }\n  if (!interactionCode) {\n    throw new AuthSdkError('Unable to parse interaction_code from the url');\n  }\n  \n  // Save tokens to storage\n  const { tokens } = await authClient.token.exchangeCodeForTokens({ interactionCode, codeVerifier });\n  authClient.tokenManager.setTokens(tokens);\n}"],"file":"handleInteractionCodeRedirect.js"}