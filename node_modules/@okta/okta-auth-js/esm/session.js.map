{"version":3,"sources":["../../lib/session.ts"],"names":["omit","getLink","toQueryString","get","post","httpRequest","sessionExists","sdk","session","then","res","status","catch","getSession","withCredentials","refresh","href","user","closeSession","url","getIssuerOrigin","method","refreshSession","setCookieAndRedirect","sessionToken","redirectUrl","window","location","assign","checkAccountSetupComplete","token"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA,SAASA,IAAT,EAAeC,OAAf,EAAwBC,aAAxB,QAA6C,QAA7C;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,WAApB,QAAuC,QAAvC;;AAEA,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AAC1B,SAAOA,GAAG,CAACC,OAAJ,CAAYL,GAAZ,GACJM,IADI,CACC,UAASC,GAAT,EAAc;AAClB,QAAIA,GAAG,CAACC,MAAJ,KAAe,QAAnB,EAA6B;AAC3B,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GANI,EAOJC,KAPI,CAOE,YAAW;AAChB,WAAO,KAAP;AACD,GATI,CAAP;AAUD;;AAED,SAASC,UAAT,CAAoBN,GAApB,EAAyB;AACvB,SAAOJ,GAAG,CAACI,GAAD,EAAM,qBAAN,EAA6B;AAAEO,IAAAA,eAAe,EAAE;AAAnB,GAA7B,CAAH,CACNL,IADM,CACD,UAASD,OAAT,EAAkB;AACtB,QAAIE,GAAG,GAAGV,IAAI,CAACQ,OAAD,EAAU,QAAV,CAAd;;AAEAE,IAAAA,GAAG,CAACK,OAAJ,GAAc,YAAW;AACvB,aAAOX,IAAI,CAACG,GAAD,EAAMN,OAAO,CAACO,OAAD,EAAU,SAAV,CAAP,CAA4BQ,IAAlC,EAAwC,EAAxC,EAA4C;AAAEF,QAAAA,eAAe,EAAE;AAAnB,OAA5C,CAAX;AACD,KAFD;;AAIAJ,IAAAA,GAAG,CAACO,IAAJ,GAAW,YAAW;AACpB,aAAOd,GAAG,CAACI,GAAD,EAAMN,OAAO,CAACO,OAAD,EAAU,MAAV,CAAP,CAAyBQ,IAA/B,EAAqC;AAAEF,QAAAA,eAAe,EAAE;AAAnB,OAArC,CAAV;AACD,KAFD;;AAIA,WAAOJ,GAAP;AACD,GAbM,EAcNE,KAdM,CAcA,YAAW;AAChB;AACA,WAAO;AAACD,MAAAA,MAAM,EAAE;AAAT,KAAP;AACD,GAjBM,CAAP;AAkBD;;AAED,SAASO,YAAT,CAAsBX,GAAtB,EAA2B;AACzB,SAAOF,WAAW,CAACE,GAAD,EAAM;AACtBY,IAAAA,GAAG,EAAEZ,GAAG,CAACa,eAAJ,KAAwB,qBADP;AAEtBC,IAAAA,MAAM,EAAE,QAFc;AAGtBP,IAAAA,eAAe,EAAE;AAHK,GAAN,CAAlB;AAKD;;AAED,SAASQ,cAAT,CAAwBf,GAAxB,EAA6B;AAC3B,SAAOH,IAAI,CAACG,GAAD,EAAM,uCAAN,EAA+C,EAA/C,EAAmD;AAAEO,IAAAA,eAAe,EAAE;AAAnB,GAAnD,CAAX;AACD;;AAED,SAASS,oBAAT,CAA8BhB,GAA9B,EAAmCiB,YAAnC,EAAiDC,WAAjD,EAA8D;AAC5DA,EAAAA,WAAW,GAAGA,WAAW,IAAIC,MAAM,CAACC,QAAP,CAAgBX,IAA7C;AACAU,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBrB,GAAG,CAACa,eAAJ,KAAwB,8BAAxB,GACrBlB,aAAa,CAAC;AACZ2B,IAAAA,yBAAyB,EAAE,IADf;AAEZC,IAAAA,KAAK,EAAEN,YAFK;AAGZC,IAAAA,WAAW,EAAEA;AAHD,GAAD,CADf;AAMD;;AAED,SACEnB,aADF,EAEEO,UAFF,EAGEK,YAHF,EAIEI,cAJF,EAKEC,oBALF","sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\nimport { omit, getLink, toQueryString } from './util';\nimport { get, post, httpRequest } from './http';\n\nfunction sessionExists(sdk) {\n  return sdk.session.get()\n    .then(function(res) {\n      if (res.status === 'ACTIVE') {\n        return true;\n      }\n      return false;\n    })\n    .catch(function() {\n      return false;\n    });\n}\n\nfunction getSession(sdk) { \n  return get(sdk, '/api/v1/sessions/me', { withCredentials: true })\n  .then(function(session) {\n    var res = omit(session, '_links');\n\n    res.refresh = function() {\n      return post(sdk, getLink(session, 'refresh').href, {}, { withCredentials: true });\n    };\n\n    res.user = function() {\n      return get(sdk, getLink(session, 'user').href, { withCredentials: true });\n    };\n\n    return res;\n  })\n  .catch(function() {\n    // Return INACTIVE status on failure\n    return {status: 'INACTIVE'};\n  });\n}\n\nfunction closeSession(sdk) {\n  return httpRequest(sdk, {\n    url: sdk.getIssuerOrigin() + '/api/v1/sessions/me',\n    method: 'DELETE',\n    withCredentials: true\n  });\n}\n\nfunction refreshSession(sdk) {\n  return post(sdk, '/api/v1/sessions/me/lifecycle/refresh', {}, { withCredentials: true });\n}\n\nfunction setCookieAndRedirect(sdk, sessionToken, redirectUrl) {\n  redirectUrl = redirectUrl || window.location.href;\n  window.location.assign(sdk.getIssuerOrigin() + '/login/sessionCookieRedirect' +\n    toQueryString({\n      checkAccountSetupComplete: true,\n      token: sessionToken,\n      redirectUrl: redirectUrl\n    }));\n}\n\nexport {\n  sessionExists,\n  getSession,\n  closeSession,\n  refreshSession,\n  setCookieAndRedirect\n};\n"],"file":"session.js"}